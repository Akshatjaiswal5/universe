syntax = "proto3";
package helloworld.v1;
import "google/protobuf/descriptor.proto";

option java_multiple_files = true;
option java_package = "com.helloworld.v1";
option java_outer_classname = "GreeterApiProto";
option csharp_namespace = "Helloworld.V1";
option go_package = "helloworldv1";
option objc_class_prefix = "HXX";
option php_namespace = "Helloworld\\V1";

extend google.protobuf.MethodOptions {
  GraphQLQuery graphql_query = 50001;
}
extend google.protobuf.MessageOptions {
  GraphQLType graphql_type = 50002;
}
extend google.protobuf.FieldOptions {
  GraphQLField graphql_field = 50003;
}
// GraphQL Field anotation type.
message GraphQLField {
  string name = 50009;
  string description = 50010;
  bool is_not_null = 50011;
  bool is_id = 50012;
}
// GraphQL Query anotation type.
message GraphQLQuery {
  string name = 50005;
  string description = 50006;
  GraphqlQueryType type = 50007;
}
// Available query types.
enum GraphqlQueryType {
  GRAPHQL_QUERY_TYPE_INVALID = 0;
  GRAPHQL_QUERY_TYPE_QUERY = 1;
  GRAPHQL_QUERY_TYPE_MUTATION = 2;
  GRAPHQL_QUERY_TYPE_SUBSCRIPTION = 3;
}
// GraphQL Type anotation type.
message GraphQLType {
  string name = 50007;
  string description = 50008;
}

// The greeting service definition.
service GreeterAPI {
  // Sends a greeting.
  rpc SayHello (SayHelloRequest) returns (SayHelloResponse) {
    option (graphql_query).name = "sayHello";
    option (graphql_query).description = "Greet given name";
    option (graphql_query).type = GRAPHQL_QUERY_TYPE_MUTATION;
  }
}
// The request message containing the user's name.
message SayHelloRequest {
  option (graphql_type).name = "SayHelloInput";
  string name = 1 [
    (graphql_field).name = "name",
    (graphql_field).is_not_null = false
  ];
}
// The response message containing the greetings
message SayHelloResponse {
  option (graphql_type).name = "SayHello";
  string message = 1 [(graphql_field).name = "greeting"];
}
